@await Html.RenderEPiServerQuickNavigatorAsync()

@using ChildFund.Features.Shared.Pages
@using ChildFund.Infrastructure.Cms.Helpers
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model ChildFund.Features.Shared.Interfaces.IContentViewModel<IContent>

@{
    if (Model == null) return;
    var cacheBustingString = Model.Layout?.CssCacheVersion;
    var hasCacheBustingString = !string.IsNullOrEmpty(cacheBustingString);
    var optiEnvironmentForGraph = EnvironmentHelper.GetEnvironmentPrefixForGraph();
    var odpApiKey = EnvironmentHelper.GetODPApiKey();
}

<!DOCTYPE html>

@{
    EnvironmentHelper.GetEnvironmentName();
}

<html lang="en" class="@(Html.IsInEditMode() ? "editMode" : "")">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    @if (Environment.GetEnvironmentVariable("ASPNETCORE_ENVIRONMENT")?.ToLower() != "production")
    {
        <meta name="robots" content="noindex, nofollow" />
    }

    @Html.CanonicalLink()
    @if (Model.CurrentContent is FoundationPageData foundation)
    {
        <title>@foundation.MetaTitle</title>
        @Html.RenderMetaData(Model.CurrentContent)
    }

    @Html.RenderOpenGraphMetaData(Model)

    @*Styles*@
    <link rel="icon" href="~/icons/episerver.png" type="image/x-icon" />
    <link rel="shortcut icon" href="~/icons/episerver.png" type="image/x-icon" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />

    @if (hasCacheBustingString)
    {
        <link rel="stylesheet" href="/css/styles.css?v=@(cacheBustingString)" type="text/css" />
    }
    else
    {
        <link rel="stylesheet" href="/css/styles.css" type="text/css" asp-append-version="true" />
    }
	
    @*<partial name="_Favicons.cshtml" />*@

    @RenderSection("AdditionalStyles", false)
    @ClientResources.RenderAllRequiredResources("Header")

    @if (Model.SiteSettings is { EnableOdpTracking: true } && Model.TrackOdp && !ViewHelper.IsEditMode)
    {
        var pageViewScript = User?.Identity?.Name == null || !User.Identity.Name.Contains("@") ? "zaius.event('pageview');" : "zaius.event('pageview', { email:'" + User.Identity.Name + "' });";

        <script type='text/javascript'>
            var zaius = window['zaius'] || (window['zaius'] = []); zaius.methods = ["initialize", "onload", "customer", "entity", "event", "subscribe", "unsubscribe", "consent", "identify", "anonymize", "dispatch"]; zaius.factory = function (e) { return function () { var t = Array.prototype.slice.call(arguments); t.unshift(e); zaius.push(t); return zaius } }; (function () { for (var i = 0; i < zaius.methods.length; i++) { var method = zaius.methods[i]; zaius[method] = zaius.factory(method) } var e = document.createElement("script"); e.type = "text/javascript"; e.async = true; e.src = ("https:" === document.location.protocol ? "https://" : "http://") + "d1igp3oop3iho5.cloudfront.net/v2/@odpApiKey/zaius-min.js"; var t = document.getElementsByTagName("script")[0]; t.parentNode.insertBefore(e, t) })();
            @Html.Raw(pageViewScript)
        </script>
    }

    @Html.RenderExtendedCss(Model.CurrentContent)
    @Html.RenderHeaderScripts(Model.CurrentContent)
    @await RenderSectionAsync("head", required: false)
</head>
<body graph-env="@optiEnvironmentForGraph">
	@*<a href="#main" class="skip">@Model.Labels.SkipToMain</a>*@
	@RenderBody()
</body>
</html>